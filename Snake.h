#pragma once
#include "Field.h"

// Структура для представления тела змеи.
// Тело змеи есть односвязным списком
struct Body
{
	Point point; // координаты части тела
	Body* next;  // указатель на следующую часть тела
};

// Класс для представления змеи
class Snake
{
private:
	// Поля
	Body* body;  // указатель на тело (первым есть хвост) змеи
	int apples;  // количество съеденых яблок
	bool isDead; // умер ли змей (причина остановки игры)

	// Метод увеличения количества съеденых яблок
	void EatApple() { apples++; }

	// Метод убийства змеи
	void KillSnake() { isDead = true; }

	/* Тип:                   Метод
	   Параметры:             указатель на поле
	   Возвращаемое значение: -
	   Описание:              рисование на поле всей змеи */
	void DrawSnake(Field* field) const;

public:
	/* Тип:                   Конструктор
	   Параметры:             указатель на поле на котором размещается змея, точка размещения головы
	   Возвращаемое значение: -
	   Описание:              создание змеи на поле и рисование ее головы на нем */
	Snake(Field* field, const Point& start);

	/* Тип:                   Деструктор
	   Параметры:             -
	   Возвращаемое значение: -
	   Описание:              очищение памяти под змею на куче */
	~Snake();

	/* Тип:                   Метод
	   Параметры:             указатель на поле, точка для перемещения головы
	   Возвращаемое значение: -
	   Описание:              установка новой точки для головы и передвижение всего тела */
	void Move(Field* field, const Point& point);

	// Метод для возвращения информации о жизни змеи
	bool IsDead() const { return isDead; }

	// Метод для возвращения количества съеденных яблок
	int GetApples() const { return apples; }
};